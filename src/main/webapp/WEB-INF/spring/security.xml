<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">



	<http use-expressions="true">
		<intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/projects**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/projects/**" access="hasRole('ROLE_ADMIN')" />		
		<intercept-url pattern="/account**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/account/**" access="hasRole('ROLE_USER')" />
		<form-login login-page="/login.html"  default-target-url="/logged.html"/>
		<logout logout-url="/logout" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<!-- <user-service> <user name="admin" password="admin" authorities="ROLE_USER, 
				ROLE_ADMIN"/> </user-service>  -->
			<password-encoder hash="bcrypt" />
			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="SELECT tb_user.username, tb_role.name from tb_user
												join tb_user_role on tb_user.id = tb_user_role.user_id
												join tb_role on tb_user_role.role_id = tb_role.id
												WHERE
												tb_user.username = ?"
												
				users-by-username-query="select username,password,enabled from tb_user where username = ?" />

		</authentication-provider>
	</authentication-manager>

</beans:beans>